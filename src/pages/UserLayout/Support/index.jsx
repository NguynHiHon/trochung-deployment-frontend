import React, { useEffect, useState } from 'react';
import { Box, Grid, Paper, TextField, Typography, Button, Stack, Divider } from '@mui/material';
import { getCaptcha, sendSupport } from './supportService'; // <-- import t·ª´ service

const SupportPage = () => {
    const [form, setForm] = useState({ name: '', email: '', phone: '', message: '' });
    const [captcha, setCaptcha] = useState({ display: '', token: '' });

    const handleChange = (field) => (e) => setForm({ ...form, [field]: e.target.value });

    // üü¢ D√πng service ƒë·ªÉ l·∫•y captcha
    const loadCaptcha = async () => {
        try {
            const res = await getCaptcha();
            if (res.data?.success) {
                setCaptcha({ display: res.data.display, token: res.data.token });
            }
        } catch {
            console.error('L·ªói khi t·∫£i captcha');
        }
    };
    useEffect(() => {
        loadCaptcha();
    }, []);

    // üü¢ D√πng service ƒë·ªÉ g·ª≠i form li√™n h·ªá
    const handleSubmit = async () => {
        try {
            const res = await sendSupport(form, captcha.token);
            if (res.data?.success) {
                alert('ƒê√£ g·ª≠i li√™n h·ªá. C·∫£m ∆°n b·∫°n!');
                setForm({ name: '', email: '', phone: '', message: '', captchaCode: '' });
                loadCaptcha();
            }
        } catch (e) {
            alert('G·ª≠i th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra captcha ho·∫∑c ƒëƒÉng nh·∫≠p.');
            setForm({ name: '', email: '', phone: '', message: '', captchaCode: '' });
            loadCaptcha();
        }
    };

    return (
        <Box sx={{ width: '100%', bgcolor: '#fff' }}>
            <Typography variant="h6" sx={{ mb: 2, fontWeight: 700 }}>
                Li√™n h·ªá tr·ª±c ti·∫øp
            </Typography>

            <Grid container spacing={3}>
                <Grid item xs={12} md={8}>
                    <Paper elevation={1} sx={{ p: 2 }}>
                        <Stack spacing={2}>
                            <TextField label="T√™n c·ªßa b·∫°n" required fullWidth size="small"
                                value={form.name} onChange={handleChange('name')} />
                            <TextField label="Email" required fullWidth size="small" type="email"
                                value={form.email} onChange={handleChange('email')} />
                            <TextField label="ƒêi·ªán tho·∫°i" fullWidth size="small"
                                value={form.phone} onChange={handleChange('phone')} />
                            <TextField label="N·ªôi dung li√™n h·ªá" required fullWidth size="small" multiline minRows={4}
                                value={form.message} onChange={handleChange('message')} />
                            <Grid container spacing={2} alignItems="center">
                                <Grid item xs={12} sm={8}>
                                    <TextField label="M√£ x√°c nh·∫≠n" required fullWidth size="small"
                                        value={form.captchaCode || ''} onChange={handleChange('captchaCode')} />
                                </Grid>
                                <Grid item xs={8} sm={3}>
                                    <Paper variant="outlined" sx={{ p: 1.2, textAlign: 'center', fontWeight: 700, letterSpacing: 4 }}>
                                        {captcha.display || '----'}
                                    </Paper>
                                </Grid>
                                <Grid item xs={4} sm={1}>
                                    <Button variant="text" onClick={loadCaptcha}>ƒê·ªïi</Button>
                                </Grid>
                            </Grid>
                            <Box>
                                <Button variant="contained" onClick={handleSubmit}>G·ª≠i li√™n h·ªá</Button>
                            </Box>
                        </Stack>
                    </Paper>
                </Grid>

                <Grid item xs={12} md={4}>
                    <Paper elevation={0} sx={{ p: 2, bgcolor: 'grey.50', border: '1px solid', borderColor: 'grey.200' }}>
                        <Typography variant="subtitle1" sx={{ fontWeight: 700, mb: 1 }}>
                            TH√îNG TIN LI√äN H·ªÜ
                        </Typography>
                        <Typography variant="body2" sx={{ mb: 2, color: 'text.secondary' }}>
                            Ch√∫ng t√¥i bi·∫øt b·∫°n c√≥ r·∫•t nhi·ªÅu s·ª± l·ª±a ch·ªçn. C·∫£m ∆°n v√¨ ƒë√£ tin t∆∞·ªüng.
                        </Typography>
                        <Divider sx={{ mb: 2 }} />
                        <Stack spacing={1}>
                            <Typography variant="body2"><strong>ƒêi·ªán tho·∫°i:</strong> 09678.333.78</Typography>
                            <Typography variant="body2"><strong>Email:</strong> nhatroviet@gmail.com</Typography>
                            <Typography variant="body2"><strong>Zalo:</strong> 09678.333.78</Typography>
                            <Typography variant="body2"><strong>Viber:</strong> 09678.333.78</Typography>
                        </Stack>
                    </Paper>
                </Grid>
            </Grid>
        </Box>
    );
};

export default SupportPage;
